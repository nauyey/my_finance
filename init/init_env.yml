---
- name: Initial Environment Setup - Setup Neo4j and link data repository
  hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    # Neo4j configuration
    neo4j_version: "5.18.0"
    neo4j_tarball: "neo4j-community-{{ neo4j_version }}-unix.tar.gz"
    neo4j_download_url: "https://neo4j.com/artifact.php?name={{ neo4j_tarball }}"
    neo4j_install_dir: "/opt/neo4j"

    # Data repository configuration (to be cloned into a sibling directory)
    data_repo_url: "git@github.com:wangzitian0/my_finance_data.git"
    # 由于当前工作目录为 llm/my_finance，因此数据仓库路径为上级目录下的 my_finance_data
    data_repo_dest: "../my_finance_data"
    branch: "main"

  tasks:
    - name: Update APT cache and upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install essential system packages (Python3 and pip3)
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip

    - name: Install OpenJDK 17
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Create Neo4j installation directory
      file:
        path: "{{ neo4j_install_dir }}"
        state: directory

    - name: Download Neo4j tarball
      get_url:
        url: "{{ neo4j_download_url }}"
        dest: "/tmp/{{ neo4j_tarball }}"
        mode: '0644'

    - name: Extract Neo4j tarball to installation directory
      unarchive:
        src: "/tmp/{{ neo4j_tarball }}"
        dest: "{{ neo4j_install_dir }}"
        remote_src: yes
        extra_opts: [--strip-components=1]

    - name: Configure Neo4j to listen on 0.0.0.0
      lineinfile:
        path: "{{ neo4j_install_dir }}/conf/neo4j.conf"
        regexp: '^#?dbms\.default_listen_address='
        line: 'dbms.default_listen_address=0.0.0.0'
        state: present

    - name: Start Neo4j service
      command: "{{ neo4j_install_dir }}/bin/neo4j start"
      register: neo4j_start
      failed_when: (neo4j_start.rc != 0) and ("Neo4j is already running" not in neo4j_start.stderr)

    - name: Check Neo4j service status
      command: "{{ neo4j_install_dir }}/bin/neo4j status"
      register: neo4j_status
      changed_when: false

    - name: Display Neo4j service status
      debug:
        var: neo4j_status.stdout_lines

    # 检查数据仓库（my_finance_data）是否存在（判断 .git 目录）
    - name: Check if data repository exists
      stat:
        path: "{{ data_repo_dest }}/.git"
      register: data_repo_stat

    - name: Clone data repository (my_finance_data) using SSH
      git:
        repo: "{{ data_repo_url }}"
        dest: "{{ data_repo_dest }}"
        version: "{{ branch }}"
      become: no
      when: not data_repo_stat.stat.exists

    # 检查主仓库下的 "data" 符号链接是否存在且正确
    - name: Check if "data" symlink exists in main repository
      stat:
        path: "./data"
        follow: false
      register: data_link_stat

    - name: Remove existing "data" if not a correct symlink
      file:
        path: "./data"
        state: absent
      become: no
      when: data_link_stat.stat.exists and (not data_link_stat.stat.islnk or data_link_stat.stat.lnk_source != "../my_finance_data")

    - name: Create symlink "data" pointing to ../my_finance_data in main repository
      file:
        src: "../my_finance_data"
        dest: "./data"
        state: link
      become: no
      when: not (data_link_stat.stat.exists and data_link_stat.stat.islnk and data_link_stat.stat.lnk_source == "../my_finance_data")

    - name: Install pipenv dependencies (creates virtual environment)
      command: pipenv install
      args:
        chdir: "."
      become: no

    - name: Final message
      debug:
        msg: "Initial environment setup complete. Verify Neo4j at http://localhost:7474."
